//
// mGBA-Shared.xcconfig
//
// Generated by BuildSettingExtractor on 5/29/24
// https://buildsettingextractor.com
//

// Always Search User Paths (Deprecated)
// 
// This setting is deprecated as of Xcode 8.3 and may not be supported in future
// versions. It is recommended that you disable the setting.
// 
// If enabled, both `#include <header.h>`-style and `#include "header.h"`-style
// directives search the paths in `USER_HEADER_SEARCH_PATHS` before
// `HEADER_SEARCH_PATHS`. As a consequence, user headers, such as your own `String.h`
// header, have precedence over system headers when using `#include <header.h>`. This is
// done using the `-iquote` flag for the paths provided in `USER_HEADER_SEARCH_PATHS`. If
// disabled and your compiler fully supports separate user paths, user headers are only
// accessible with `#include "header.h"`-style preprocessor directives.
// 
// For backwards compatibility reasons, this setting is enabled by default. Disabling it
// is strongly recommended.

ALWAYS_SEARCH_USER_PATHS = NO



// Objective-C Automatic Reference Counting
// 
// Compiles reference-counted Objective-C code to use Automatic Reference Counting. Code
// compiled using automated reference counting is compatible with other code (such as
// frameworks) compiled using either manual reference counting (for example, traditional
// `retain` and `release` messages) or automated reference counting. [-fobjc-arc]

CLANG_ENABLE_OBJC_ARC = YES



// Code Signing Identity
// 
// The name, also known as the *common name*, of a valid code-signing certificate in a
// keychain within your keychain path. A missing or invalid certificate will cause a
// build error.

CODE_SIGN_IDENTITY = 



// Combine HiDPI Images
// 
// Combines image files at different resolutions into one multi-page TIFF file that is
// HiDPI compliant for macOS 10.7 and later. Only image files in the same directory and
// with the same base name and extension are combined. The file names must conform to the
// naming convention used in HiDPI.

COMBINE_HIDPI_IMAGES = YES



// Exported Symbols File
// 
// This is a project-relative path to a file that lists the symbols to export. See `ld
// -exported_symbols_list` for details on exporting symbols.

EXPORTED_SYMBOLS_FILE = 



// Framework Search Paths
// 
// This is a list of paths to folders containing frameworks to be searched by the
// compiler for both included or imported header files when compiling C, Objective-C,
// C++, or Objective-C++, and by the linker for frameworks used by the product. Paths are
// delimited by whitespace, so any paths with spaces in them must be properly quoted.

FRAMEWORK_SEARCH_PATHS = 



// Header Search Paths
// 
// This is a list of paths to folders to be searched by the compiler for included or
// imported header files when compiling C, Objective-C, C++, or Objective-C++. Paths are
// delimited by whitespace, so any paths with spaces in them need to be properly quoted.

HEADER_SEARCH_PATHS = "$(SRCROOT)/src" "$(SRCROOT)/include"



// Info.plist File
// 
// The project-relative path to the property list file that contains the `Info.plist`
// information used by bundles. For details on information property list files, see
// [Information Property
// List](https://developer.apple.com/documentation/bundleresources/information_property_list).

INFOPLIST_FILE = Info.plist



// Installation Directory
// 
// The directory in which to install the build products. This path is prepended by the
// `DSTROOT`.

INSTALL_PATH = "$(USER_LIBRARY_DIR)/Application Support/OpenEmu/Cores"



// Other C Flags
// 
// Space-separated list of additional flags to pass to the compiler for C and Objective-C
// files. Be sure to backslash-escape any arguments that contain spaces or special
// characters, such as path names that may contain spaces. Use this setting if Xcode does
// not already provide UI for a particular C or Objective-C compiler flag.

OTHER_CFLAGS = -DM_CORE_GBA -DDISABLE_THREADING -DMINIMAL_CORE=1 -DMGBA_STANDALONE -DHAVE_STRDUP -DHAVE_STRNDUP -DHAVE_STRLCPY -DHAVE_LOCALTIME_R -DHAVE_LOCALE -DHAVE_STRTOF_L -DHAVE_SNPRINTF_L -DHAVE_SETLOCALE -DHAVE_XLOCALE



// Product Bundle Identifier
// 
// A string that uniquely identifies the bundle. The string should be in reverse DNS
// format using only alphanumeric characters (`A-Z`, `a-z`, `0-9`), the dot (`.`), and
// the hyphen (`-`).
// 
// When `GENERATE_INFOPLIST_FILE` is enabled, sets the value of the
// [CFBundleIdentifier](https://developer.apple.com/documentation/bundleresources/information_property_list/cfbundleidentifier)
// key in the `Info.plist` file to the value of this build setting.

PRODUCT_BUNDLE_IDENTIFIER = org.openemu.${PRODUCT_NAME:rfc1034identifier}



// Product Name
// 
// This is the basename of the product generated by the target.
// 
// When `GENERATE_INFOPLIST_FILE` is enabled, sets the value of the
// [CFBundleName](https://developer.apple.com/documentation/bundleresources/information_property_list/cfbundlename)
// key in the `Info.plist` file to the value of this build setting.

PRODUCT_NAME = mGBA



// Skip Install
// 
// If enabled, don't install built products even if deployment locations are active.

SKIP_INSTALL = YES



// Wrapper Extension
// 
// The extension used for product wrappers, which has a default value based on the
// product type.

WRAPPER_EXTENSION = oecoreplugin