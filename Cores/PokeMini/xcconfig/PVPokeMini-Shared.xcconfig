//
// PVPokeMini-Shared.xcconfig
//
// Generated by BuildSettingExtractor on 5/27/24
// https://buildsettingextractor.com
//

// Allow Multi-Platform Builds
// 
// If enabled, allows targets to build multiple times within a single build operation.
// Targets will build for the platform of the active run destination, as well as the
// platforms of any targets which depend on them.

ALLOW_TARGET_PLATFORM_SPECIALIZATION = YES



// Misuse of 'nonnull'
// 
// Check for misuses of `nonnull` parameter and return types.

CLANG_ANALYZER_NONNULL = YES



// Suspicious Conversions of NSNumber and CFNumberRef
// 
// Warn when a number object, such as an instance of `NSNumber`, `CFNumberRef`,
// `OSNumber`, or `OSBoolean` is compared or converted to a primitive value instead of
// another object.

CLANG_ANALYZER_NUMBER_OBJECT_CONVERSION = YES_AGGRESSIVE



// Enable Modules (C and Objective-C)
// 
// Enables the use of modules for system APIs. System headers are imported as semantic
// modules instead of raw headers. This can result in faster builds and project indexing.

CLANG_ENABLE_MODULES = YES



// Documentation Comments
// 
// Warns about issues in documentation comments (`doxygen`-style) such as missing or
// incorrect documentation tags.

CLANG_WARN_DOCUMENTATION_COMMENTS = YES



// Infinite Recursion
// 
// Warn if all paths through a function call itself.

CLANG_WARN_INFINITE_RECURSION = YES



// Suspicious Moves
// 
// Warn about suspicious uses of `std::move`.

CLANG_WARN_SUSPICIOUS_MOVE = YES



// Code Signing Identity
// 
// The name, also known as the *common name*, of a valid code-signing certificate in a
// keychain within your keychain path. A missing or invalid certificate will cause a
// build error.

CODE_SIGN_IDENTITY = Apple Development



// Code Signing Style
// 
// This setting specifies the method used to acquire and locate signing assets. Choose
// `Automatic` to let Xcode automatically create and update profiles, app IDs, and
// certificates. Choose `Manual` to create and update these yourself on the developer
// website.

CODE_SIGN_STYLE = Automatic



// Strip Debug Symbols During Copy
// 
// Specifies whether binary files that are copied during the build, such as in a Copy
// Bundle Resources or Copy Files build phase, should be stripped of debugging symbols.
// It does not cause the linked product of a target to be strippedâ€”use
// `STRIP_INSTALLED_PRODUCT` for that.

COPY_PHASE_STRIP = NO



// Current Project Version
// 
// This setting defines the current version of the project. The value must be a integer
// or floating point number, such as `57` or `365.8`.
// 
// When `GENERATE_INFOPLIST_FILE` is enabled, sets the value of the
// [CFBundleVersion](https://developer.apple.com/documentation/bundleresources/information_property_list/cfbundleversion)
// key in the `Info.plist` file to the value of this build setting.

CURRENT_PROJECT_VERSION = 1



// Defines Module
// 
// If enabled, the product will be treated as defining its own module. This enables
// automatic production of LLVM module map files when appropriate, and allows the product
// to be imported as a module.

DEFINES_MODULE = YES



// Development Team
// 
// The team ID of a development team to use for signing certificates and provisioning
// profiles.

DEVELOPMENT_TEAM = S32Z3HMYVQ



// Compatibility Version
// 
// Determines the compatibility version of the resulting library, bundle, or framework
// binary. See [Dynamic Library Design
// Guidelines](https://developer.apple.com/library/content/documentation/DeveloperTools/Conceptual/DynamicLibraries/100-Articles/DynamicLibraryDesignGuidelines.html#//apple_ref/doc/uid/TP40002013-SW19)
// in [Dynamic Library Programming
// Topics](https://developer.apple.com/library/content/documentation/DeveloperTools/Conceptual/DynamicLibraries/000-Introduction/Introduction.html)
// for details on assigning version numbers of dynamic libraries.

DYLIB_COMPATIBILITY_VERSION = 1



// Current Library Version
// 
// This setting defines the current version of any framework built by the project. As
// with `CURRENT_PROJECT_VERSION`, the value must be an integer or floating point number,
// such as `57` or `365.8`. See [Dynamic Library Design
// Guidelines](https://developer.apple.com/library/content/documentation/DeveloperTools/Conceptual/DynamicLibraries/100-Articles/DynamicLibraryDesignGuidelines.html#//apple_ref/doc/uid/TP40002013-SW19)
// in [Dynamic Library Programming
// Topics](https://developer.apple.com/library/content/documentation/DeveloperTools/Conceptual/DynamicLibraries/000-Introduction/Introduction.html)
// for details on assigning version numbers of dynamic libraries.

DYLIB_CURRENT_VERSION = 1



// Dynamic Library Install Name Base
// 
// Sets the base value for the internal `install path` (`LC_ID_DYLIB`) in a dynamic
// library. This will be combined with the `EXECUTABLE_PATH` to form the full install
// path. Setting `LD_DYLIB_INSTALL_NAME` directly will override this setting. This
// setting defaults to the target's `INSTALL_PATH`. It is ignored when building any
// product other than a dynamic library.

DYLIB_INSTALL_NAME_BASE = @rpath



ENABLE_BITCODE = NO



// No Common Blocks
// 
// In C, allocate even uninitialized global variables in the data section of the object
// file, rather than generating them as common blocks. This has the effect that if the
// same variable is declared (without `extern`) in two different compilations, you will
// get an error when you link them.

GCC_NO_COMMON_BLOCKS = YES



// Inhibit All Warnings
// 
// Inhibit all warning messages.

GCC_WARN_INHIBIT_ALL_WARNINGS = YES



// Info.plist File
// 
// The project-relative path to the property list file that contains the `Info.plist`
// information used by bundles. For details on information property list files, see
// [Information Property
// List](https://developer.apple.com/documentation/bundleresources/information_property_list).

INFOPLIST_FILE = PVPokeMini/Info.plist



// Installation Directory
// 
// The directory in which to install the build products. This path is prepended by the
// `DSTROOT`.

INSTALL_PATH = $(LOCAL_LIBRARY_DIR)/Frameworks



// iOS Deployment Target
// 
// Code will load on this and later versions of iOS. Framework APIs that are unavailable
// in earlier versions will be weak-linked; your code should check for null function
// pointers or specific system versions before calling newer APIs.

IPHONEOS_DEPLOYMENT_TARGET = 13.0
IPHONEOS_DEPLOYMENT_TARGET[sdk=macosx*] = 14.2



// Runpath Search Paths
// 
// This is a list of paths to be added to the `runpath` search path list for the image
// being created. At runtime, `dyld` uses the `runpath` when searching for dylibs whose
// load path begins with `@rpath/`. See [Dynamic Library Programming
// Topics](https://developer.apple.com/library/content/documentation/DeveloperTools/Conceptual/DynamicLibraries/000-Introduction/Introduction.html).

LD_RUNPATH_SEARCH_PATHS = $(inherited) @executable_path/Frameworks @loader_path/Frameworks



// Product Bundle Identifier
// 
// A string that uniquely identifies the bundle. The string should be in reverse DNS
// format using only alphanumeric characters (`A-Z`, `a-z`, `0-9`), the dot (`.`), and
// the hyphen (`-`).
// 
// When `GENERATE_INFOPLIST_FILE` is enabled, sets the value of the
// [CFBundleIdentifier](https://developer.apple.com/documentation/bundleresources/information_property_list/cfbundleidentifier)
// key in the `Info.plist` file to the value of this build setting.

PRODUCT_BUNDLE_IDENTIFIER = org.provenance-emu.PVPokeMini



// Product Name
// 
// This is the basename of the product generated by the target.
// 
// When `GENERATE_INFOPLIST_FILE` is enabled, sets the value of the
// [CFBundleName](https://developer.apple.com/documentation/bundleresources/information_property_list/cfbundlename)
// key in the `Info.plist` file to the value of this build setting.

PRODUCT_NAME = PVPokeMini



// Provisioning Profile
// 
// Must contain a profile name (or UUID). A missing or invalid profile will cause a build
// error. Use in conjunction with [DEVELOPMENT_TEAM] to fully specify provisioning
// profile.

PROVISIONING_PROFILE_SPECIFIER = 



// Skip Install
// 
// If enabled, don't install built products even if deployment locations are active.

SKIP_INSTALL = YES



SUPPORTS_MAC_DESIGNED_FOR_IPHONE_IPAD = YES



SUPPORTS_MACCATALYST = YES



// Swift Language Version
// 
// The language version used to compile the target's Swift code.

SWIFT_VERSION = 5.0



// Targeted Device Families
// 
// Comma-separated list of integers corresponding to device families supported by this
// target.
// 
// The build system uses this information to set the correct value for the
// `UIDeviceFamily` key it adds to the target's `Info.plist` file. Values inapplicable to
// the current platform will be removed automatically. This also drives the
// `--target-device` flag to actool, which determines the idioms selected during catalog
// compilation.
// 
// Possible values include:
// * *1*: iPhone, iPod touch
// * *2*: iPad, Mac Catalyst using "Scaled to Match iPad" Interface
// * *3*: Apple TV
// * *4*: Apple Watch
// * *6*: Mac Catalyst using "Optimize for Mac" Interface
// * *7*: Apple Vision

TARGETED_DEVICE_FAMILY = 1,2,3,4,6



// tvOS Deployment Target
// 
// Code will load on this and later versions of tvOS. Framework APIs that are unavailable
// in earlier versions will be weak-linked; your code should check for null function
// pointers or specific system versions before calling newer APIs.

TVOS_DEPLOYMENT_TARGET = 13.0



// Versioning Name Prefix
// 
// Used as a prefix for the name of the version info symbol in the generated versioning
// source file. If you prefix your exported symbols you will probably want to set this to
// the same prefix.

VERSION_INFO_PREFIX = 



// Versioning System
// 
// Selects the process used for version-stamping generated files.
// 
// * None: Use no versioning system.
// * Apple Generic: Use the current project version setting. [apple-generic]
// * Apple Generic (Hidden Symbols): Use the current project version setting with
// hidden-visibility symbols. [apple-generic-hidden]

VERSIONING_SYSTEM = apple-generic