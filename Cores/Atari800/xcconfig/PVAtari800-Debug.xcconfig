//
// PVAtari800-Debug.xcconfig
//
// Generated by BuildSettingExtractor on 5/30/24
// https://buildsettingextractor.com
//

#include "PVAtari800-Shared.xcconfig"

// Debug Information Format
// 
// The type of debug information to produce.
// 
// * DWARF: Object files and linked products will use DWARF as the debug information
// format. [dwarf]
// * DWARF with dSYM File: Object files and linked products will use DWARF as the debug
// information format, and Xcode will also produce a dSYM file containing the debug
// information from the individual object files (except that a dSYM file is not needed
// and will not be created for static library or object file products). [dwarf-with-dsym]

DEBUG_INFORMATION_FORMAT = dwarf



// Enable Testability
// 
// Enabling this setting will build the target with options appropriate for running
// automated tests against its product.
// 
// This setting can be enabled when building targets for debugging if their products will
// be tested. This may result in tests running slower than otherwise.
// 
// When this setting is enabled:
// 
// * `GCC_SYMBOLS_PRIVATE_EXTERN` is disabled (`-fvisibility=hidden` will not be passed
// to `clang`).
// * `-enable-testing` is passed to the Swift compiler.
// * `-export_dynamic` is passed to the linker.
// * `STRIP_INSTALLED_PRODUCT` is disabled (`strip` will not be run on the produced
// binary).

ENABLE_TESTABILITY = YES



// Generate Position-Dependent Code
// 
// Faster function calls for applications. Not appropriate for shared libraries, which
// need to be position-independent.

GCC_DYNAMIC_NO_PIC = NO



// Produce Debugging Information
// 
// Debugging information is required for shader debugging and profiling.

MTL_ENABLE_DEBUG_INFO = YES



// Swift Optimization Level
// 
// * None: Compile without any optimization. [-Onone]
// * Optimize for Speed: [-O]
// * Optimize for Size: [-Osize]
// * Whole Module Optimization: [-O -whole-module-optimization]

SWIFT_OPTIMIZATION_LEVEL = -Onone