//
// vecx-libretro-Shared.xcconfig
//
// Generated by BuildSettingExtractor on 5/30/24
// https://buildsettingextractor.com
//

// Allow Multi-Platform Builds
// 
// If enabled, allows targets to build multiple times within a single build operation.
// Targets will build for the platform of the active run destination, as well as the
// platforms of any targets which depend on them.

ALLOW_TARGET_PLATFORM_SPECIALIZATION = YES



// Code Signing Identity
// 
// The name, also known as the *common name*, of a valid code-signing certificate in a
// keychain within your keychain path. A missing or invalid certificate will cause a
// build error.

CODE_SIGN_IDENTITY = 



// Code Signing Style
// 
// This setting specifies the method used to acquire and locate signing assets. Choose
// `Automatic` to let Xcode automatically create and update profiles, app IDs, and
// certificates. Choose `Manual` to create and update these yourself on the developer
// website.

CODE_SIGN_STYLE = Manual



// Enable C++ Exceptions
// 
// Enable C++ exception handling. Generates extra code needed to propagate exceptions.
// For some targets, this implies GCC will generate frame unwind information for all
// functions, which can produce significant data size overhead, although it does not
// affect execution. If you do not specify this option, GCC will enable it by default for
// languages like C++ that normally require exception handling, and disable it for
// languages like C that do not normally require it. However, you may need to enable this
// option when compiling C code that needs to interoperate properly with exception
// handlers written in C++.

GCC_ENABLE_CPP_EXCEPTIONS = NO



// Inhibit All Warnings
// 
// Inhibit all warning messages.

GCC_WARN_INHIBIT_ALL_WARNINGS = YES



// Product Name
// 
// This is the basename of the product generated by the target.
// 
// When `GENERATE_INFOPLIST_FILE` is enabled, sets the value of the
// [CFBundleName](https://developer.apple.com/documentation/bundleresources/information_property_list/cfbundlename)
// key in the `Info.plist` file to the value of this build setting.

PRODUCT_NAME = vecx-libretro



// Skip Install
// 
// If enabled, don't install built products even if deployment locations are active.

SKIP_INSTALL = YES



// Strip Linked Product
// 
// If enabled,  the linked product of the build will be stripped of symbols when
// performing deployment postprocessing.

STRIP_INSTALLED_PRODUCT = NO



// Supported Platforms
// 
// The list of supported platforms from which a base SDK can be used. This setting is
// used if the product can be built for multiple platforms using different SDKs.

SUPPORTED_PLATFORMS = watchsimulator watchos macosx iphonesimulator iphoneos appletvsimulator appletvos



SUPPORTS_MACCATALYST = YES



// Targeted Device Families
// 
// Comma-separated list of integers corresponding to device families supported by this
// target.
// 
// The build system uses this information to set the correct value for the
// `UIDeviceFamily` key it adds to the target's `Info.plist` file. Values inapplicable to
// the current platform will be removed automatically. This also drives the
// `--target-device` flag to actool, which determines the idioms selected during catalog
// compilation.
// 
// Possible values include:
// * *1*: iPhone, iPod touch
// * *2*: iPad, Mac Catalyst using "Scaled to Match iPad" Interface
// * *3*: Apple TV
// * *4*: Apple Watch
// * *6*: Mac Catalyst using "Optimize for Mac" Interface
// * *7*: Apple Vision

TARGETED_DEVICE_FAMILY = 1,2,3,4,6